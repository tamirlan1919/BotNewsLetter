from datetime import datetime, timedelta
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from aiogram import Bot
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from configs.config import TOKEN
API_TOKEN = TOKEN
CHANNEL_ID = "@dadaev_blog"  # –£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ username –∫–∞–Ω–∞–ª–∞

scheduler = AsyncIOScheduler()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async def send_delayed_message_stories(chat_id: int):
    bot = Bot(token=API_TOKEN)
    try:
        await bot.send_message(
            chat_id= chat_id,
            text='–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —É—Ä–æ–∫, –∫–∞–∫ —Å–Ω–∏–º–∞—Ç—å —Å—Ç–æ—Ä–∏—Å, —á—Ç–æ–±—ã –æ—Ö–≤–∞—Ç—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–æ—Å–ª–∏:\n'
            'https://www.youtube.com/watch?v=cD60phCue7o&ab_channel=%D0%90%D0%B1%D0%B4%D1%83%D0%BB-%D0%9C%D0%B0%D0%BB%D0%B8%D0%BA'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        member = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=chat_id)
        if member.status not in {"member", "administrator", "creator"}:
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=chat_id,
                text="–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª. –¢–∞–º —è –¥–µ–ª—é—Å—å –Ω–æ–≤—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º, —Ñ–∏—à–∫–∞–º–∏, –¥–µ–ª–∞—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤üî•",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
                                url=f"https://t.me/{CHANNEL_ID.lstrip('@')}"
                            )
                        ]
                    ]
                )
            )
        else:
            await bot.send_message(
                chat_id=chat_id,
                text='https://www.youtube.com/shorts/JtO1zS8W3dI'
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
    finally:
        await bot.session.close()

async def send_delayed_message_reels(chat_id: int):
    bot = Bot(token=API_TOKEN)
    try:
        await bot.send_message(
            chat_id=chat_id,
            text='–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —É—Ä–æ–∫, –∫–∞–∫ —Å–Ω–∏–º–∞—Ç—å —Ä–∏–ª—Å, —á—Ç–æ–±—ã –æ—Ö–≤–∞—Ç—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–æ—Å–ª–∏:\n'
                 'https://www.youtube.com/watch?v=Lvnt0mjNOmg&ab_channel=%D0%90%D0%B1%D0%B4%D1%83%D0%BB-%D0%9C%D0%B0%D0%BB%D0%B8%D0%BA'
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        member = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=chat_id)
        if member.status not in {"member", "administrator", "creator"}:
            # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ


            await bot.send_message(
                chat_id=chat_id,
                text="–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª. –¢–∞–º —è –¥–µ–ª—é—Å—å –Ω–æ–≤—ã–º–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ –∏–Ω—Å—Ç–∞–≥—Ä–∞–º, —Ñ–∏—à–∫–∞–º–∏, –¥–µ–ª–∞—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤üî•",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
                                url=f"https://t.me/{CHANNEL_ID.lstrip('@')}"
                            )
                        ]
                    ]
                )
            )
        else:
            await bot.send_message(
                chat_id=chat_id,
                text='https://www.youtube.com/shorts/JtO1zS8W3dI'
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
    finally:
        await bot.session.close()


# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
def schedule_message(chat_id: int, option: str):
    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏
    job_id = f"{option}_{chat_id}"
    run_time = datetime.now() + timedelta(hours=3)  # –ß–µ—Ä–µ–∑ 3 —á–∞—Å–∞

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–¥–∞—á–∞ —Å —ç—Ç–∏–º ID
    existing_job = scheduler.get_job(job_id)

    if existing_job:
        # –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ—ë
        print(f"–ó–∞–¥–∞—á–∞ —Å ID {job_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–¥–∞—á—É.")
        scheduler.remove_job(job_id)

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    print(f"–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É —Å ID {job_id}.")
    if option == 'reels':
        scheduler.add_job(send_delayed_message_reels, "date", run_date=run_time, args=[chat_id], id=job_id)
    else:
        scheduler.add_job(send_delayed_message_stories, "date", run_date=run_time, args=[chat_id], id=job_id)

# –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
def start_scheduler():
    scheduler.start()
